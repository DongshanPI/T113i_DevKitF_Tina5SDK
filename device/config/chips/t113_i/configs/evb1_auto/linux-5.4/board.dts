/*
 * Allwinner Technology CO., Ltd.
 */

/dts-v1/;

#include "sun8iw20p1.dtsi"

/{
	board = "t113_i", "t113_i-evb1_auto";
	model = "sun8iw20";
	compatible = "allwinner,t113_i", "arm,sun8iw20p1";
	aliases {
		gmac0 = &gmac0;
	};	
	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		/* c906 */
		c906_ddr: c906_ddr@42300000 {
			reg = <0x0 0x42300000 0x0 0x00600000>;
			no-map;
		};
		/*
		 * The name should be "vdev%dbuffer".
		 * Its size should be not less than
		 *     RPMSG_BUF_SIZE * (num of buffers in a vring) * 2
		 *   = 512 * (num of buffers in a vring) * 2
		 */
		rv_vdev0buffer: vdev0buffer@42900000 {
			compatible = "shared-dma-pool";
			reg = <0x0 0x42900000 0x0 0x40000>;
			no-map;
		};

		/*
		 * The name should be "vdev%dvring%d".
		 * The size of each should be not less than
		 *     PAGE_ALIGN(vring_size(num, align))
		 *   = PAGE_ALIGN(16 * num + 6 + 2 * num + (pads for align) + 6 + 8 * num)
		 *
		 * (Please refer to the vring layout in include/uapi/linux/virtio_ring.h)
		 */
		rv_vdev0vring0: vdev0vring0@42940000 {
			reg = <0x0 0x42940000 0x0 0x2000>;
			no-map;
		};
		rv_vdev0vring1: vdev0vring1@42942000 {
			reg = <0x0 0x42942000 0x0 0x2000>;
			no-map;
		};

		dsp0_rpbuf_reserved: dsp0_rpbuf@42244000 {
			compatible = "shared-dma-pool";
			no-map;
			reg = <0x0 0x42244000 0x0 0x8000>;
		};

		dsp0ddr: dsp0ddr@42000000 {
			reg = <0x0 0x42000000 0x0 0x00100000>;
			no-map;
		};

		/*
		 * The name should be "vdev%dbuffer".
		 * Its size should be not less than
		 *     RPMSG_BUF_SIZE * (num of buffers in a vring) * 2
		 *   = 512 * (num of buffers in a vring) * 2
		 */
		vdev0buffer: vdev0buffer@42200000 {
			compatible = "shared-dma-pool";
			reg = <0x0 0x42200000 0x0 0x40000>;
			no-map;
		};

		/*
		 * The name should be "vdev%dvring%d".
		 * The size of each should be not less than
		 *     PAGE_ALIGN(vring_size(num, align))
		 *   = PAGE_ALIGN(16 * num + 6 + 2 * num + (pads for align) + 6 + 8 * num)
		 *
		 * (Please refer to the vring layout in include/uapi/linux/virtio_ring.h)
		 */
		vdev0vring0: vdev0vring0@42240000 {
			reg = <0x0 0x42240000 0x0 0x2000>;
			no-map;
		};
		vdev0vring1: vdev0vring1@42242000 {
			reg = <0x0 0x42242000 0x0 0x2000>;
			no-map;
		};

		/*
		* dsp ram addr
		*/
		dsp0dram: dsp0dram@400000 {
			reg = <0x0 0x400000 0x0 0x10000>;
			no-map;
		};
		dsp0iram0: dsp0iram0@420000 {
			reg = <0x0 0x420000 0x0 0x8000>;
			no-map;
		};
		dsp0iram1: dsp0iram1@440000 {
			reg = <0x0 0x440000 0x0 0x8000>;
			no-map;
		};
		dsp_share_space@42100000 {
			no-map;
			reg = <0x0 0x42100000 0x0 0x10000>;
		};

	};

	mailbox_heartbeat: mailbox_heartbeat@0 {
		compatible = "mailbox-heartbeat";
		rproc-np = <&dsp0_rproc>;
		mboxes = <&msgbox 2>, <&msgbox 3>;
		mbox-names = "tx", "rx";
		status = "okay";
	};
	reg_3v3: vdd_3v3 {
		compatible = "regulator-fixed";
		regulator-name = "vdd_3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-enable-ramp-delay = <1000>;
		enable-active-high;
	};
	dsp0_rproc: dsp_rproc@0 {
		compatible = "allwinner,hifi4-rproc", "simple-bus";
		clock-frequency = <600000000>;
		clocks = <&ccu CLK_PLL_PERIPH0_2X>, <&ccu CLK_DSP>, <&ccu CLK_BUS_DSP_CFG>, <&r_ccu CLK_R_AHB>;
		clock-names = "pll", "mod", "cfg", "ahbs";
		resets = <&ccu RST_BUS_DSP>, <&ccu RST_BUS_DSP_CFG>, <&ccu RST_BUS_DSP_DBG>, <&ccu RST_BUS_MSGBOX1>;
		reset-names = "mod-rst", "cfg-rst", "dbg-rst", "msg-rst";
		reg = <0x0 0x03000008 0x0 0x04>,
		      <0x0 0x01700000 0x0 0x40>;
		reg-names = "sram-for-cpux", "hifi4-cfg";
		mboxes = <&msgbox 0>;
		mbox-names = "arm-kick";
		memory-region = <&dsp0ddr>, <&vdev0buffer>, <&vdev0vring0>, <&vdev0vring1>,
				<&dsp0dram>, <&dsp0iram0>, <&dsp0iram1>;
		memory-mappings =
			/* < DA		len		PA >	*/
			/* local SRAM via external bus */
			< 0x28000	0x20000		0x28000 >,
			/* local SRAM via internal bus */
			< 0x400000	0x10000		0x400000 >,
			< 0x420000	0x8000		0x420000 >,
			< 0x440000	0x8000		0x440000 >,
			/* DDR front 256MB */
			< 0x10000000	0x10000000	0x40000000 >,
			/* local SRAM via internal bus */
			< 0x20028000	0x10000		0x400000 >,
			< 0x20038000	0x8000		0x420000 >,
			< 0x20040000	0x8000		0x440000 >,
			/* DDR front 256MB */
			< 0x30000000	0x10000000	0x40000000 >,
			/* DDR front 1GB */
			< 0x40000000	0x40000000	0x40000000 >,
			/* DDR front 1GB */
			< 0x80000000	0x40000000	0x40000000 >,
			/* DDR front 1GB */
			< 0xC0000000	0x40000000	0x40000000 >;

		id = <0>;
		status = "okay";

		/* driver config in dts for dsp0 */
		dsp0_system_resources: dsp_system_resources@0 {
			compatible = "allwinner,dsp-rproc-srm-core";
			status = "disabled";

			d_console_uart: d_console_uart@0 {
				compatible = "allwinner,dsp-rproc-srm-dev";
				status = "disabled";
			};

			d_gpio_interrupt: d_gpio_interrupt@0 {
				compatible = "allwinner,dsp-rproc-srm-dev";
				status = "disabled";
			};

			d_alsa_rpaf: d_alsa_rpaf@0 {
				compatible = "allwinner,dsp-rproc-srm-dev";
				status = "disabled";
			};
		};
	};

	rpbuf_controller0: rpbuf_controller@0 {
		compatible = "allwinner,rpbuf-controller";
		remoteproc = <&dsp0_rproc>;
		ctrl_id = <0>;	/* index of /dev/rpbuf_ctrl */
		//iommus = <&mmu_aw 5 1>;
		memory-region = <&dsp0_rpbuf_reserved>;
		status = "okay";
	};

	rpbuf_sample: rpbuf_sample@0 {
		compatible = "allwinner,rpbuf-sample";
		rpbuf = <&rpbuf_controller0>;
		status = "okay";
	};

	c906_rproc: c906_rproc@0 {
		compatible = "allwinner,c906-rproc";
		clock-frequency = <800000000>;
		clocks = <&ccu CLK_PLL_PERIPH0_800M>, <&ccu CLK_RISCV>, <&ccu CLK_BUS_RISCV_CFG>, <&ccu CLK_RISCV_RST>, <&ccu CLK_BUS_RISCV>;
		clock-names = "pll", "mod", "cfg", "riscv-rst", "riscv-gate";
		resets = <&ccu RST_BUS_RISCV_CFG>, <&ccu RST_BUS_MSGBOX2>;
		reset-names = "cfg-rst", "msg-rst";
		memory-region = <&c906_ddr>, <&rv_vdev0buffer>, <&rv_vdev0vring0>, <&rv_vdev0vring1>;
		reg = <0x0 0x06010000 0x0 0x1000>;
		reg-names = "c906-cfg";
		mboxes = <&msgbox 4>;
		mbox-names = "arm-kick";
		memory-mappings =
			/* DA 	         len         PA */
			/* DDR for c906  */
			< 0x40000000 0x10000000 0x40000000 >;
		firmware-name = "amp_rv0.bin";
		status = "okay";
	};

	reg_vdd_cpu: vdd-cpu {
		compatible = "sunxi-pwm-regulator";
		pwms = <&pwm 7 5000 1>;
		regulator-name = "vdd_cpu";
		regulator-min-microvolt = <800000>;
		regulator-max-microvolt = <1150000>;
		regulator-settling-time-us = <4000>;
		regulator-always-on;
		regulator-boot-on;
		status = "okay";
	};

	reg_usb1_vbus: usb1-vbus {
		compatible = "regulator-fixed";
		regulator-name = "usb1-vbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-enable-ramp-delay = <1000>;
		/*gpio = <&pio PB 12 GPIO_ACTIVE_HIGH>;*/
		gpio = <&pio PD 19 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	awlink0: awlink@0x0 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "allwinner,sun8i-awlink";
		device_type = "awlink0";
		id = <0>;
		status = "okay";
	};
	awlink1: awlink@0x1 {
                #address-cells = <1>;
                #size-cells = <0>;
                compatible = "allwinner,sun8i-awlink";
                device_type = "awlink1";
                id = <1>;
                status = "okay";
        };
};

&cpu0 {
	cpu-supply = <&reg_vdd_cpu>;
};

&pio {
	input-debounce = <0 0 0 0 0 1>;
	sdc0_pins_a: sdc0@0 {
		allwinner,pins = "PF0", "PF1", "PF2",
				 "PF3", "PF4", "PF5";
		allwinner,function = "sdc0";
		allwinner,muxsel = <2>;
		allwinner,drive = <3>;
		allwinner,pull = <1>;
		pins = "PF0", "PF1", "PF2",
		       "PF3", "PF4", "PF5";
		function = "sdc0";
		drive-strength = <30>;
		bias-pull-up;
		power-source = <3300>;
	};


	sdc0_pins_b: sdc0@1 {
		pins = "PF0", "PF1", "PF2",
		       "PF3", "PF4", "PF5";
		function = "sdc0";
		drive-strength = <30>;
		bias-pull-up;
		power-source = <1800>;
	};

	sdc0_pins_c: sdc0@2 {
		pins = "PF0", "PF1", "PF2",
			"PF3", "PF4", "PF5";
		function = "gpio_in";
	};

	/* TODO: add jtag pin */
	sdc0_pins_d: sdc0@3 {
		pins = "PF2", "PF4";
		function = "uart0";
		drive-strength = <10>;
		bias-pull-up;
	};

	sdc0_pins_e: sdc0@4 {
		pins = "PF0", "PF1", "PF3",
			"PF5";
		function = "jtag";
		drive-strength = <10>;
		bias-pull-up;
	};


	sdc1_pins_a: sdc1@0 {
		pins = "PG0", "PG1", "PG2",
		       "PG3", "PG4", "PG5";
		function = "sdc1";
		drive-strength = <30>;
		bias-pull-up;
	};

	sdc1_pins_b: sdc1@1 {
		pins = "PG0", "PG1", "PG2",
		       "PG3", "PG4", "PG5";
		//function = "sdc1";
		function = "gpio_in";
	};

	sdc2_pins_a: sdc2@0 {
		allwinner,pins = "PC2", "PC3", "PC4",
				 "PC5", "PC6", "PC7";
		allwinner,function = "sdc2";
		allwinner,muxsel = <3>;
		allwinner,drive = <3>;
		allwinner,pull = <1>;
		pins = "PC2", "PC3", "PC4",
			"PC5", "PC6", "PC7";
		function = "sdc2";
		drive-strength = <30>;
		bias-pull-up;
	};

	sdc2_pins_b: sdc2@1 {
		pins = "PC2", "PC3", "PC4",
		       "PC5", "PC6", "PC7";
		function = "gpio_in";
	};

	wlan_pins_a:wlan@0 {
		pins = "PG11";
		function = "clk_fanout1";
	};


	uart0_pins_a: uart0_pins@0 {  /* For EVB1 board */
		pins = "PB8", "PB9";
		function = "uart0";
		drive-strength = <10>;
		bias-pull-up;
	};

	uart0_pins_b: uart0_pins@1 {  /* For EVB1 board */
		pins = "PB8", "PB9";
		function = "gpio_in";
	};

	uart1_pins_a: uart1_pins@0 {  /* For EVB1 board */
		pins = "PG6", "PG7", "PG8", "PG9";
		function = "uart1";
		drive-strength = <10>;
		bias-pull-up;
	};
	uart1_pins_b: uart1_pins {  /* For EVB1 board */
		pins = "PG6", "PG7", "PG8", "PG9";
		function = "gpio_in";
	};
        uart2_pins_a: uart2_pins@0 {  
                pins = "PB0", "PB1";
                function = "uart2";
		allwinner,muxsel = <7>;
                drive-strength = <10>;
                bias-pull-up;
        };

        uart2_pins_b: uart2_pins@1 { 
                pins = "PB0", "PB1";
                function = "gpio_in";
        };
	uart3_pins_a: uart3_pins@0 {  /* For t113_evb */
		pins = "PB6", "PB7";
		function = "uart3";
		 allwinner,muxsel = <7>;
		drive-strength = <10>;
		bias-pull-up;
	};

	uart3_pins_b: uart3_pins@1 {  /* For t113_evb */
		pins = "PB6", "PB7";
		function = "gpio_in";
	};
	twi0_pins_a: twi0@0 {
		//pins = "PB2", "PB3";
		function = "twi0";
		drive-strength = <10>;
	};

	twi0_pins_b: twi0@1 {
		//pins = "PB2", "PB3";
		function = "gpio_in";
	};
	twi2_pins_a: twi2@0 {
                pins = "PC0", "PC1";
                function = "twi2";
		allwinner,muxsel = <3>;
                drive-strength = <10>;
        };

        twi2_pins_b: twi2@1 {
                pins = "PC0", "PC1";
                function = "gpio_in";
        };

	s_cir0_pins_a: s_cir0@0 {
		pins = "PB1";
		function = "ir";
		drive-strength = <10>;
		bias-pull-up;
	};

	s_cir0_pins_b: s_cir0@1 {
		pins = "PB1";
		function = "gpio_in";
	};

	ir1_pins_a: ir1@0 {
		pins = "PB0";
		function = "ir";
		drive-strength = <10>;
		bias-pull-up;
	};

	ir1_pins_b: ir1@1 {
		pins = "PB0";
		function = "gpio_in";
	};


	dmic_pins_a: dmic@0 {
		/* DMIC_PIN: CLK, DATA0, DATA1, DATA2, DATA3*/
		pins = "PB12", "PB11", "PE14";
		function = "dmic";
		drive-strength = <20>;
		bias-disable;
	};

	dmic_pins_b: dmic@1 {
		pins = "PB12", "PB11",  "PE14";
		allwinner,function = "io_disabled";
		drive-strength = <20>;
		bias-disable;
	};

	daudio0_pins_a: daudio0@0 {
		pins = "PB29", "PB23", "PB24",
		       "PB25", "PB26", "PB27", "PB28",
		       "PB22";
		function = "i2s0";
		drive-strength = <20>;
		bias-disable;
	};

	daudio0_pins_b: daudio0_sleep@0 {
		pins = "PB29", "PB23", "PB24",
		       "PB25", "PB26", "PB27", "PB28",
		       "PB22";
		function = "io_disabled";
		drive-strength = <20>;
		bias-disable;
	};
	
	daudio1_pins_a: daudio1@0 {
		/* MCLK, LRCK, BCLK */
		pins = "PG12", "PG13";
		function = "i2s1";
		drive-strength = <20>;
		bias-disable;
	};

	daudio1_pins_b: daudio1@1 {
		/* DIN0 */
		pins = "PG14";
		function = "i2s1_din";
		drive-strength = <20>;
		bias-disable;
	};

	daudio1_pins_c: daudio1@2 {
		/* DOUT0 */
		pins = "PG15";
		function = "i2s1_dout";
		drive-strength = <20>;
		bias-disable;
	};

	daudio1_pins_d: daudio1_sleep@0 {
		pins = "PG12", "PG13", "PG14", "PG15";
		function = "io_disabled";
		drive-strength = <20>;
		bias-disable;
	};

	daudio2_pins_a: daudio2@0 {
		/* I2S_PIN: MCLK, BCLK, LRCK */
		//pins = "PB7", "PB6", "PB5";
		function = "i2s2";
		drive-strength = <20>;
		bias-disable;
	};

	daudio2_pins_b: daudio2@1 {
		/* I2S_PIN: DIN0 */
		//pins = "PB3";
		function = "i2s2_din";
		drive-strength = <20>;
		bias-disable;
	};

	daudio2_pins_c: daudio2@2 {
		/* I2S_PIN: DOUT0 */
		//pins = "PB4";
		function = "i2s2_dout";
		drive-strength = <20>;
		bias-disable;
	};

	daudio2_pins_d: daudio2_sleep@0 {
		//pins = "PB7", "PB6", "PB5", "PB4", "PB3";
		function = "io_disabled";
		drive-strength = <20>;
		bias-disable;
	};

	spdif_pins_a: spdif@0 {
		/* SPDIF_PIN: SPDIF_OUT */
		//pins = "PG18";
		function = "spdif";
		drive-strength = <20>;
		bias-disable;
	};

	spdif_pins_b: spdif_sleep@0 {
		//pins = "PG18";
		function = "io_disabled";
		drive-strength = <20>;
		bias-disable;
	};
	/*
	gmac0_pins_a: gmac@0 {
		allwinner,pins = "PE0", "PE1", "PE2", "PE3", "PE4",
				 "PE5", "PE6", "PE7","PE8", "PE9";
		allwinner,function = "gmac0";
		allwinner,muxsel = <8>;
		allwinner,drive = <1>;
		allwinner,pull = <0>;
	};

	gmac0_pins_b: gmac@1 {
		allwinner,pins = "PE0", "PE1", "PE2", "PE3", "PE4",
				 "PE5", "PE6", "PE7","PE8", "PE9";
		allwinner,function = "gpio_in";
		allwinner,muxsel = <0>;
		allwinner,drive = <1>;
		allwinner,pull = <0>;
	};
	*/
	gmac0_pins_a: gmac@0 {
		pins = "PE0", "PE1", "PE2", "PE3",
		       "PE4", "PE5", "PE6", "PE7",
		       "PE8", "PE9", "PE10", "PE11",
		       "PE12", "PE13", "PE14", "PE15";
		function = "gmac0";
		muxsel = <8>; /* for uboot driver */
		drive-strength = <10>;
	};

	gmac0_pins_b: gmac@1 {
		pins = "PE0", "PE1", "PE2", "PE3",
		       "PE4", "PE5", "PE6", "PE7",
		       "PE8", "PE9", "PE10", "PE11",
		       "PE12", "PE13", "PE14", "PE15";
		function = "gpio_in";
	};
	spi0_pins_a: spi0@0 {
		pins = "PC2", "PC4", "PC5","PC7", "PC6"; /*clk mosi miso hold wp*/
		function = "spi0";
		drive-strength = <10>;
	};

	spi0_pins_b: spi0@1 {
		pins = "PC3";
		function = "spi0";
		drive-strength = <10>;
		bias-pull-up;   /* only CS should be pulled up */
	};

	spi0_pins_c: spi0@2 {
		pins = "PC2", "PC3", "PC4", "PC5","PC6", "PC7";
		function = "gpio_in";
		drive-strength = <10>;
	};
	
	spi1_pins_a: spi1@0 {
		//pins = "PB11", "PB10", "PB9","PB8", "PB0"; /*clk mosi miso hold wp*/
		function = "spi1";
		drive-strength = <10>;
	};

	spi1_pins_b: spi1@1 {
		pins = "PB12";
		function = "spi1";
		drive-strength = <10>;
		bias-pull-up;   // only CS should be pulled up
	};

	spi1_pins_c: spi1@2 {
		//allwinner,pins = "PB0", "PB8", "PB9", "PB10","PB11", "PB12";
		allwinner,function = "gpio_in";
		allwinner,muxsel = <0>;
		drive-strength = <10>;
	};

	pwm2_pin_a: pwm2@0 {
        	pins = "PB11";
	        function = "pwm2";
	        muxsel = <3>;
	        drive-strength = <10>;
	        bias-pull-up;
	};

	pwm2_pin_b: pwm2@1 {
	        pins = "PB11";
        	muxsel = <0>;
	        function = "gpio_in";
	};

	pwm3_pin_a: pwm3@0 {
		pins = "PB0";
		function = "pwm3";
		drive-strength = <10>;
		bias-pull-up;
	};

	pwm3_pin_b: pwm3@1 {
		pins = "PB0";
		function = "gpio_in";
		bias-pull-down;
	};

	pwm7_pin_a: pwm7@0 {
		pins = "PD22";
		function = "pwm7";
		drive-strength = <10>;
		bias-pull-up;
	};

	pwm7_pin_b: pwm7@1 {
		pins = "PD22";
		function = "gpio_in";
	};

	ledc_pins_a: ledc@0 {
		pins = "PF2";
		function = "ledc";
		drive-strength = <10>;
	};

	ledc_pins_b: ledc@1 {
		pins = "PF2";
		function = "gpio_in";
	};
	dsi4lane_pins_a: dsi4lane@0 {
        allwinner,pins = "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9";
        allwinner,pname = "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9";
        allwinner,function = "dsi4lane";
        allwinner,muxsel = <4>;
        allwinner,drive = <3>;
        allwinner,pull = <0>;
	};

	dsi4lane_pins_b: dsi4lane@1 {
        allwinner,pins = "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9";
        allwinner,pname = "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9";
        allwinner,function = "dsi4lane_suspend";
        allwinner,muxsel = <7>;
        allwinner,drive = <1>;
        allwinner,pull = <0>;
	};
};

&uart0 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&uart0_pins_a>;
	pinctrl-1 = <&uart0_pins_b>;
        status = "okay";
};

&uart1 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&uart1_pins_a>;
	pinctrl-1 = <&uart1_pins_b>;
	status = "okay";
};

&uart2 {
        pinctrl-names = "default", "sleep";
        pinctrl-0 = <&uart2_pins_a>;
        pinctrl-1 = <&uart2_pins_b>;
        status = "okay";
};

&uart3 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&uart3_pins_a>;
	pinctrl-1 = <&uart3_pins_b>;
        status = "okay";
};

&sdc2 {
	non-removable;
	bus-width = <4>;
	mmc-ddr-3_3v;
	/*mmc-hs200-1_8v;*/
	/*mmc-hs400-1_8v;*/
	no-sdio;
	/delete-property/ no-sd;
	no-mmc;
	ctl-spec-caps = <0x8>;
	cap-mmc-highspeed;
	sunxi-signal-vol-sw-without-pmu;
	sunxi-power-save-mode;
	/*sunxi-dis-signal-vol-sw;*/
	max-frequency = <50000000>;
	/*vmmc-supply = <&reg_dcdc1>;*/
	/*emmc io vol 3.3v*/
	/*vqmmc-supply = <&reg_aldo1>;*/
	/*emmc io vol 1.8v*/
	/*vqmmc-supply = <&reg_eldo1>;*/
	status = "okay";
};

#if 0
&sdc2 {
	non-removable;
	bus-width = <4>;
	mmc-ddr-1_8v;
	mmc-hs200-1_8v;
	no-sdio;
//	no-sd;
	ctl-spec-caps = <0x308>;
	cap-mmc-highspeed;
	sunxi-power-save-mode;
	sunxi-dis-signal-vol-sw;
	mmc-bootpart-noacc;
	max-frequency = <150000000>;
	/*vmmc-supply = <&reg_dcdc1>;*/
	/*emmc io vol 3.3v*/
	/*vqmmc-supply = <&reg_aldo1>;*/
	/*emmc io vol 1.8v*/
	/*vqmmc-supply = <&reg_eldo1>;*/
	status = "okay";
};
#endif

&sdc0 {
	bus-width = <4>;
	cd-gpios = <&pio PF 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	/*non-removable;*/
	broken-cd;
	/*cd-inverted*/
	/*data3-detect;*/
	/*card-pwr-gpios = <&pio PH 14 1 1 2 0xffffffff>;*/
	/*cd-used-24M;*/
	cap-sd-highspeed;
	/*sd-uhs-sdr50;*/
	/*sd-uhs-ddr50;*/
	/*sd-uhs-sdr104;*/
	no-sdio;
	no-mmc;
	sunxi-power-save-mode;
	/*sunxi-dis-signal-vol-sw;*/
	max-frequency = <150000000>;
	ctl-spec-caps = <0x8>;
	/*vmmc-supply = <&reg_dcdc1>;*/
	/*vqmmc33sw-supply = <&reg_dcdc1>;*/
	/*vdmmc33sw-supply = <&reg_dcdc1>;*/
	/*vqmmc18sw-supply = <&reg_eldo1>;*/
	/*vdmmc18sw-supply = <&reg_eldo1>;*/
	status = "okay";
};

&sdc1 {
	bus-width = <4>;
	no-mmc;
	no-sd;
	cap-sd-highspeed;
	/*sd-uhs-sdr12*/
	/*sd-uhs-sdr25;*/
	/*sd-uhs-sdr50;*/
	/*sd-uhs-ddr50;*/
	/*sd-uhs-sdr104;*/
	/*sunxi-power-save-mode;*/
	/*sunxi-dis-signal-vol-sw;*/
	cap-sdio-irq;
	keep-power-in-suspend;
	ignore-pm-notify;
	max-frequency = <150000000>;
	ctl-spec-caps = <0x8>;
	status = "okay";
};


&twi0 {
	clock-frequency = <400000>;
	pinctrl-0 = <&twi0_pins_a>;
	pinctrl-1 = <&twi0_pins_b>;
	pinctrl-names = "default", "sleep";
	twi_drv_used = <0>;
	dmas = <&dma 43>, <&dma 43>;
	dma-names = "tx", "rx";
	status = "disabled";

};
&twi1 {
	clock-frequency = <400000>;
	//pinctrl-0 = <&twi1_pins_a>;
	//pinctrl-1 = <&twi1_pins_b>;
	pinctrl-names = "default", "sleep";
	status = "disabled";
};
/*
&twi2 {
	clock-frequency = <400000>;
	//pinctrl-0 = <&twi2_pins_a>;
	//pinctrl-1 = <&twi2_pins_b>;
	pinctrl-names = "default", "sleep";
	twi_drv_used = <1>;
	dmas = <&dma 45>, <&dma 45>;
	dma-names = "tx", "rx";
	status = "disabled";
};
*/
&twi2 {
        clock-frequency = <400000>;
        pinctrl-0 = <&twi2_pins_a>;
        pinctrl-1 = <&twi2_pins_b>;
        pinctrl-names = "default", "sleep";
	twi_drv_used = <1>;
        dmas = <&dma 45>, <&dma 45>;
        dma-names = "tx", "rx";
        status = "okay";

	ctp@38 {
                compatible = "focaltech,fts";
                reg = <0x38>;
                status = "okay";
                interrupt-parent = <&pio>;
                interrupts = <PB 10 IRQ_TYPE_LEVEL_LOW>;
                focaltech,reset-gpio = <&pio PE 17 GPIO_ACTIVE_HIGH>;
                focaltech,irq-gpio = <&pio PB 10 IRQ_TYPE_LEVEL_LOW>;
		focaltech,max-touch-number = <5>;
		//focaltech,display-coords = <0 0 800 480>;
		focaltech,display-coords = <0 0 480 800>;
		//focaltech,reg_vdd = <0x0000001f>;
		//focaltech,reg_avdd = <0x0000001f>;
		focaltech,reg_vdd = <&reg_3v3>;
		focaltech,reg_avdd = <&reg_3v3>;
        };

/*
	ctp@38 {
                status = "okay";
                ctp_used = <1>;
                //ctp_name = "edt-ft5x06";
                ctp_twi_id = <0x2>;
                ctp_twi_addr = <0x38>;
                ctp_screen_max_x = <0x480>;
                ctp_screen_max_y = <0x800>;
                ctp_revert_x_flag = <0x0>;
                ctp_revert_y_flag = <0x1>;
                ctp_exchange_x_y_flag = <0x0>;
		reg_name = "edt-ft5x06";
		threshold = <0>;
		gain = <0>;
		offset = <0>;
		offset-x = <0>;
		offset-y = <0>;
		num_x = <480>;
		num_y = <800>;
		mode = <0>;
		raw_data = <0>;
		reg_threshold=<0>;
		reg_report_rate=<0>;
		reg_gain=<0>;
		reg_offset=<0>;
		reg_offset_x=<0>;
		reg_offset_y=<0>;
		reg_num_x=<480>;
		reg_num_y=<800>;
		reset = <&pio PB 10 6 1 3 0xffffffff>;
                wakeup   = <&pio PE 17 1 3 0xffffffff>;
        };
*/
	/*
       ctp@38 {
                status = "okay";
                ctp_used = <1>;
                ctp_name = "ft6336";
                ctp_twi_id = <0x2>;
                ctp_twi_addr = <0x38>;
                ctp_screen_max_x = <0x480>;
                ctp_screen_max_y = <0x800>;
                ctp_revert_x_flag = <0x0>;
                ctp_revert_y_flag = <0x1>;
                ctp_exchange_x_y_flag = <0x0>;
                ctp_int_port = <&pio PB 10 6 1 3 0xffffffff>;
                ctp_wakeup   = <&pio PE 17 1 1 3 0xffffffff>;
        };
	*/	
};
	
&twi3 {
	clock-frequency = <400000>;
	//pinctrl-0 = <&twi3_pins_a>;
	//pinctrl-1 = <&twi3_pins_b>;
	pinctrl-names = "default", "sleep";
	status = "disabled";
	/*
	ctp: ctp@14 {
		compatible = "allwinner,goodix";
		device_type = "ctp";
		reg = <0x14>;
		status = "okay";
		ctp_name = "gt9xxnew_ts";
		ctp_twi_id = <0x2>;
		ctp_twi_addr = <0x14>;
		ctp_screen_max_x = <0x480>;
		ctp_screen_max_y = <0x800>;
		ctp_revert_x_flag = <0x1>;
		ctp_revert_y_flag = <0x1>;
		ctp_exchange_x_y_flag = <0x0>;
		ctp_int_port = <&pio PB 10 GPIO_ACTIVE_HIGH>;
		ctp_wakeup = <&pio PE 17 GPIO_ACTIVE_HIGH>;
		ctp-supply = <&reg_aldo2>;
		ctp_power_ldo = <&reg_aldo2>;
		ctp_power_ldo_vol = <3300>;
	};
	*/
	ac108: ac108@3B {
		#sound-dai-cells = <0>;
		compatible = "Allwinner,MicArray_0";
		device_type = "MicArray_0";
		reg = <0x3B>;
		regulator_used = <0x0>;
		power_voltage = <3300000>;
		regulator_name = "vcc-3v3";
		power_gpio_used = <0x0>;
		reset_gpio_used = <0x0>;
		twi_bus = <0x1>;
		pga_gain = <0x1F>;
		slot_width = <0x20>;
		lrck_period = <0x80>;
		ref_pga_used = <0x1>;
		ref_pga_gain = <0x10>;
		ref_channel = <0x3>;
		debug_mode = <0x0>;
		status = "disabled";
	};
};

&spi0 {
	clock-frequency = <100000000>;
	pinctrl-0 = <&spi0_pins_a &spi0_pins_b>;
	pinctrl-1 = <&spi0_pins_c>;
	pinctrl-names = "default", "sleep";
	/*spi-supply = <&reg_dcdc1>;*/
	spi_slave_mode = <0>;
	spi0_cs_number = <1>;
        spi0_cs_bitmap = <1>;
	status = "disabled";

	spi-nand@0 {
		compatible = "spi-nand";
		spi-max-frequency=<0x5F5E100>;
		reg = <0x0>;
		spi-rx-bus-width=<0x04>;
		spi-tx-bus-width=<0x04>;
		status="disabled";
	};

	spi_board@0 {
		device_type = "spi_board0";
		compatible = "spi-nor";
		spi-max-frequency = <0x5F5E100>;
		m25p,fast-read = <1>;
		reg = <0x0>;
		spi-rx-bus-width = <0x4>;
		spi-tx-bus-width = <0x4>;
		status = "disabled";
	};
};

&spi1 {
	clock-frequency = <100000000>;
	pinctrl-0 = <&spi1_pins_a &spi1_pins_b>;
	pinctrl-1 = <&spi1_pins_c>;
	pinctrl-names = "default", "sleep";
	spi_slave_mode = <0>;
	spi1_cs_number = <1>;
        spi1_cs_bitmap = <1>;
	status = "disabled";

	spi_board1@0 {
		device_type = "spi_board1";
		compatible = "rohm,dh2228fv";
		spi-max-frequency = <0x5f5e100>;
		reg = <0x0>;
		spi-rx-bus-width = <0x4>;
		spi-tx-bus-width = <0x4>;
		status = "disabled";
	};
};

&ledc {
	pinctrl-0 = <&ledc_pins_a>;
	pinctrl-1 = <&ledc_pins_b>;
	led_count = <32>;
	output_mode = "GRB";
	reset_ns = <84>;
	t1h_ns = <800>;
	t1l_ns = <450>;
	t0h_ns = <400>;
	t0l_ns = <850>;
	wait_time0_ns = <84>;
	wait_time1_ns = <84>;
	wait_data_time_ns = <600000>;
	status	= "disabled";
};
/*
&s_cir0 {
	pinctrl-names = "default";
	pinctrl-0 = <&s_cir0_pins_a>;
	status = "okay";
};
*/
/*
&ir1 {
	pinctrl-names = "default";
	pinctrl-0 = <&ir1_pins_a>;
	status = "disabled";
};
*/
&csi0 {
	status = "disabled";
};

&mdio0{
	status = "okay";
	gmac0_phy0: ethernet-phy@1 {
                 reg = <1>;
                 max-speed = <1000>;  /* Max speed capability */
                 reset-gpios = <&pio PE 16 GPIO_ACTIVE_LOW>;
                  /* PHY datasheet rst time */
                 reset-assert-us = <10000>;
                 reset-deassert-us = <15000>;
      };
};

&gmac0 {
	phy-mode = "rgmii";
	pinctrl-0 = <&gmac0_pins_a>;
	pinctrl-1 = <&gmac0_pins_b>;
	pinctrl-names = "default", "sleep";
	sunxi,phy-clk-type =<0>;
	tx-delay =<3>;
	rx-delay =<4>;
	status = "okay";
};

#if 0
&gmac0 {
	pinctrl-0 = <&gmac0_pins_a>;
	pinctrl-1 = <&gmac0_pins_b>;
	pinctrl-names = "default", "sleep";
	phy-mode = "rmii";
	use_ephy25m = <1>;
	//tx-delay = <7>;
	//rx-delay = <31>;
	tx-delay = <3>; /*2~4*/
	rx-delay = <0>;
	phy-rst = <&pio PE 16 GPIO_ACTIVE_HIGH>;
	status = "okay";
};
#endif
/*
this option is necessary if CONFIG_SUNXI_PM_DOMAINS enable
&ve {
	power-domains = <>;
	status = "okay";
};
*/

&soc {
	platform@45000004 {
		reg = <0x0 0x45000004 0x0 0x0>;
		eraseflag   = <1>;
		next_work   = <3>;
		debug_mode  = <8>;
	};

	target@45000008 {
		reg = <0x0 0x45000008 0x0 0x0>;
		boot_clock = <1008>;	/*CPU boot frequency, Unit: MHz*/
		storage_type = <0xffffffff>; /*boot medium, 0-nand, 1-card0, 2-card2, -1(defualt)auto scan*/
		burn_key = <0>;		/*1:support burn key; 0:not support burn key*/
		dragonboard_test = <0>;	/*1:support card boot dragonboard; 0:not support card boot dragonboard*/
	};

	card0_boot_para@2 {
		/*
		 * Avoid dtc compiling warnings.
		 * @TODO: Developer should modify this to the actual value
		 */
		reg = <0x0 0x2 0x0 0x0>;
		device_type = "card0_boot_para";
		card_ctrl = <0x0>;
		card_high_speed = <0x1>;
		card_line = <0x4>;
		pinctrl-0 = <&sdc0_pins_a>;
	};

	card2_boot_para@3 {
		/*
		 * Avoid dtc compiling warnings.
		 * @TODO: Developer should modify this to the actual value
		 */
		reg = <0x0 0x3 0x0 0x0>;
		device_type = "card2_boot_para";
		card_ctrl = <0x2>;
		card_high_speed = <0x1>;
		card_line = <0x4>;
		pinctrl-0 = <&sdc2_pins_a>;
		/*pinctrl-0 = <&sdc0_pins_a>;*/
		/*sdc_ex_dly_used = <0x2>;*/
		sdc_io_1v8 = <0x1>;
		/*sdc_type = "tm4";*/
		sdc_tm4_hs200_max_freq = <150>;
		sdc_tm4_hs400_max_freq = <100>;
		sdc_ex_dly_used = <2>;
		/*sdc_tm4_win_th = <8>;*/
		/*sdc_dis_host_caps = <0x180>;*/
	};

	rfkill: rfkill@0 {
		compatible    = "allwinner,sunxi-rfkill";
		chip_en;
		power_en;
		pinctrl-0 = <&wlan_pins_a>;
		pinctrl-names = "default";
		status        = "okay";

		wlan: wlan@0 {
			compatible    = "allwinner,sunxi-wlan";
			clock-names = "32k-fanout1";
			clocks = <&ccu CLK_FANOUT1_OUT>;
			wlan_busnum    = <0x1>;
			wlan_regon    = <&pio PB 12 GPIO_ACTIVE_HIGH>;
			wlan_hostwake  = <&pio PG 10 GPIO_ACTIVE_HIGH>;
			/*wlan_power    = "VCC-3V3";*/
			/*wlan_power_vol = <3300000>;*/
			/*interrupt-parent = <&pio>;
			interrupts = < PG 10 IRQ_TYPE_LEVEL_HIGH>;*/
			wakeup-source;
			status        = "okay";

		};

		bt: bt@0 {
			compatible    = "allwinner,sunxi-bt";
			//pinctrl-0 = <&wlan_pins_a>;
			//pinctrl-names = "default";
			clock-names = "32k-fanout1";
			clocks = <&ccu CLK_FANOUT1_OUT>;
			/*bt_power_num = <0x01>;*/
			/*bt_power      = "axp803-dldo1";*/
			/*bt_io_regulator = "axp803-dldo1";*/
			/*bt_io_vol = <3300000>;*/
			/*bt_power_vol = <330000>;*/
			bt_rst_n      = <&pio PG 18 GPIO_ACTIVE_LOW>;
			status        = "okay";
		};
	};

	btlpm: btlpm@0 {
		compatible  = "allwinner,sunxi-btlpm";
		uart_index  = <0x1>;
		bt_wake     = <&pio PG 16 GPIO_ACTIVE_HIGH>;
		bt_hostwake = <&pio PG 17 GPIO_ACTIVE_HIGH>;
		status      = "okay";
	};
	ddr_mgt:addr_mgt {
		compatible     = "allwinner,sunxi-addr_mgt";
		type_addr_wifi = <0x0>;
		type_addr_eth  = <0x0>;
		status         = "okay";
	};
};

&vind0 {
	csi_top = <378000000>;
	csi_isp = <327000000>;
	status = "disabled"; /* enable twi and ver1 spi-nand max freq 30M */

	actuator0: actuator@5809450 {
		device_type = "actuator0";
		actuator0_name = "ad5820_act";
		actuator0_slave = <0x18>;
		actuator0_af_pwdn = <>;
		actuator0_afvdd = "afvcc-csi";
		actuator0_afvdd_vol = <2800000>;
		status = "disabled";
	};
	flash0: flash@5809460 {
		device_type = "flash0";
		flash0_type = <2>;
		flash0_en = <>;
		flash0_mode = <>;
		flash0_flvdd = "";
		flash0_flvdd_vol = <>;
		device_id = <0>;
		status = "disabled";
	};
	sensor0:sensor@5809470 {
		device_type = "sensor0";
		sensor0_mname = "n5";
		sensor0_twi_cci_id = <1>;
		sensor0_twi_addr = <0x64>;
		sensor0_mclk_id = <0>;
		sensor0_pos = "rear";
		sensor0_isp_used = <0>;
		sensor0_fmt = <0>;
		sensor0_stby_mode = <0>;
		sensor0_vflip = <0>;
		sensor0_hflip = <0>;
		sensor0_iovdd-supply = <>;
		sensor0_iovdd_vol = <3300000>;
		sensor0_avdd-supply = <>;
		sensor0_avdd_vol = <1200000>;
		sensor0_dvdd-supply = <>;
		sensor0_dvdd_vol = <1200000>;
		sensor0_power_en = <>;
		sensor0_reset = <&pio PE 13 GPIO_ACTIVE_LOW>;
		sensor0_pwdn = <>;
		status	= "okay";
	};
	sensor1:sensor@5809480 {
		device_type = "sensor1";
		sensor1_mname = "ov5647";
		sensor1_twi_cci_id = <3>;
		sensor1_twi_addr = <0x6c>;
		sensor1_mclk_id = <1>;
		sensor1_pos = "front";
		sensor1_isp_used = <0>;
		sensor1_fmt = <0>;
		sensor1_stby_mode = <0>;
		sensor1_vflip = <0>;
		sensor1_hflip = <0>;
		sensor1_iovdd-supply = <>;
		sensor1_iovdd_vol = <>;
		sensor1_avdd-supply = <>;
		sensor1_avdd_vol = <>;
		sensor1_dvdd-supply = <>;
		sensor1_dvdd_vol = <>;
		sensor1_power_en = <>;
		sensor1_reset = <&pio PE 7 GPIO_ACTIVE_LOW>;
		sensor1_pwdn = <&pio PE 6 GPIO_ACTIVE_LOW>;
		status	= "disabled";
	};
	vinc0:vinc@5809000 {
		vinc0_csi_sel = <0>;
		vinc0_mipi_sel = <0xff>;
		vinc0_isp_sel = <0>;
		vinc0_isp_tx_ch = <0>;
		vinc0_tdm_rx_sel = <0xff>;
		vinc0_rear_sensor_sel = <0>;
		vinc0_front_sensor_sel = <0>;
		vinc0_sensor_list = <0>;
		status = "okay";
	};
	vinc1:vinc@5809200 {
		vinc1_csi_sel = <0>;
		vinc1_mipi_sel = <0xff>;
		vinc1_isp_sel = <0>;
		vinc1_isp_tx_ch = <1>;
		vinc1_tdm_rx_sel = <0xff>;
		vinc1_rear_sensor_sel = <0>;
		vinc1_front_sensor_sel = <0>;
		vinc1_sensor_list = <0>;
		status = "okay";
	};
};

/*----------------------------------------------------------------------------------
disp init configuration

disp_mode             (0:screen0<screen0,fb0>)
screenx_output_type   (0:none; 1:lcd; 2:tv; 5:vdpo)
fbx format            (4:RGB655 5:RGB565 6:RGB556 7:ARGB1555 8:RGBA5551 9:RGB888 10:ARGB8888 12:ARGB4444)
fbx pixel sequence    (0:ARGB 1:BGRA 2:ABGR 3:RGBA)
fb0_scaler_mode_enable(scaler mode enable, used FE)
fbx_width,fbx_height  (framebuffer horizontal/vertical pixels, fix to output resolution while equal 0)
lcdx_backlight        (lcd init backlight,the range:[0,256],default:197
lcdx_yy               (lcd init screen bright/contrast/saturation/hue, value:0~100, default:50/50/57/50)
lcd0_contrast         (LCD contrast, 0~100)
lcd0_saturation       (LCD saturation, 0~100)
lcd0_hue              (LCD hue, 0~100)
framebuffer software rotation setting:
disp_rotation_used:   (0:disable; 1:enable,you must set fbX_width to lcd_y,
set fbX_height to lcd_x)
degreeX:              (X:screen index; 0:0 degree; 1:90 degree; 3:270 degree)
degreeX_Y:            (X:screen index; Y:layer index 0~15; 0:0 degree; 1:90 degree; 3:270 degree)
devX_output_type : config output type in bootGUI framework in UBOOT-2018.
				   (0:none; 1:lcd; 2:tv;)
devX_output_mode : config output resolution(see include/video/sunxi_display2.h) of bootGUI framework in UBOOT-2018
devX_screen_id   : config display index of bootGUI framework in UBOOT-2018
devX_do_hpd      : whether do hpd detectation or not in UBOOT-2018
chn_cfg_mode     : Hardware DE channel allocation config. 0:single display with 6
				   channel, 1:dual display with 4 channel in main display and 2 channel in second
                   display, 2:dual display with 3 channel in main display and 3 channel in second
                   in display.
----------------------------------------------------------------------------------*/
&disp {
	disp_init_enable         = <1>;
	disp_mode                = <0>;

	screen0_output_type      = <1>;
	screen0_output_mode      = <4>;

	screen1_output_type      = <1>;
	screen1_output_mode      = <4>;

	screen1_output_format    = <0>;
	screen1_output_bits      = <0>;
	screen1_output_eotf      = <4>;
	screen1_output_cs        = <257>;
	screen1_output_range     = <2>;
	screen1_output_scan      = <0>;
	screen1_output_aspect_ratio = <8>;

	dev0_output_type         = <1>;
	dev0_output_mode         = <4>;
	dev0_screen_id           = <0>;
	dev0_do_hpd              = <0>;

	dev1_output_type         = <4>;
	dev1_output_mode         = <10>;
	dev1_screen_id           = <1>;
	dev1_do_hpd              = <1>;

	def_output_dev           = <0>;

	fb0_format               = <0>;
	fb0_width                = <480>;
	fb0_height               = <800>;

	fb1_format               = <0>;
	fb1_width                = <0>;
	fb1_height               = <0>;
	chn_cfg_mode             = <1>;

	disp_para_zone           = <1>;
	/*VCC-LCD*/
/*	dc1sw-supply = <&reg_dc1sw>;*/
	/*VCC-DSI*/
/*	eldo3-supply = <&reg_eldo3>;*/
	/*VCC-PD*/
/*	dcdc1-supply = <&reg_dcdc1>;*/
};

/*----------------------------------------------------------------------------------
;tv configuration
;interface          (interface type,1<->cvbs,2<->YPBPR,4<->SVIDEO)
;dac_type           (0<->composite,1<->luma,2<->chroma,3<->reserved,4<->y/green,
;                    5<->u/pb/blue,6<->v/pr/red)
;dac_src            (dac no,support dac_src0~dac_src3,dac num max is 4)
;NOTE:              tv0,tv1 can not use the same dac_src.
;---------------------------------------------------------------------------------*/
&tv0 {
	interface       = <1>;
	dac_type0       = <0>;
	dac_src0        = <0>;

	status =  "okay";
};

/*----------------------------------------------------------------------------------
;lcd0 configuration

;lcd_if:               0:hv(sync+de); 1:8080; 2:ttl; 3:lvds; 4:dsi; 5:edp; 6:extend dsi
;lcd_hv_if             0:Parallel RGB; 8:Serial RGB; 10:Dummy RGB; 11: RGB Dummy;12:CCIR656
;lcd_hv_clk_phase      0:0 degree;1:90 degree;2:180 degree;3:270 degree
;lcd_hv_sync_polarity  0:vs low,hs low; 1:vs high,hslow; 2:vs low,hs high; 3:vs high,hs high
;lcd_hv_syuv_seq       0:YUYV; 1:YVYU; 2:UYVY; 3:VYUY
;lcd_cpu_if            0:18bit/1 cycle parallel(RGB666); 4:16bit/1cycle parallel (RGB565)
;                      6:18bit/3 cycle parallel(RGB666); 7:16bit/2cycle parallel (RGB565)
;lcd_cpu_te            0:frame auto trigger; 1:frame triggered by te rising edge; 2:frame triggered by te falling edge;
;lcd_dsi_if            0:video mode; 1: Command mode; 2:video burst mode
;lcd_dsi_te            0:frame auto trigger; 1:frame triggered by te rising edge; 2:frame triggered by te falling edge;
;lcd_x:                lcd horizontal resolution
;lcd_y:                lcd vertical resolution
;lcd_width:            width of lcd in mm
;lcd_height:           height of lcd in mm
;lcd_dclk_freq:        in MHZ unit
;lcd_pwm_freq:         in HZ unit
;lcd_pwm_pol:          lcd backlight PWM polarity
;lcd_pwm_max_limit     lcd backlight PWM max limit(<=255)
;lcd_hbp:              hsync back porch(pixel) + hsync plus width(pixel);
;lcd_ht:               hsync total cycle(pixel)
;lcd_vbp:              vsync back porch(line) + vysnc plus width(line)
;lcd_vt:               vysnc total cycle(line)
;lcd_hspw:             hsync plus width(pixel)
;lcd_vspw:             vysnc plus width(pixel)
;lcd_lvds_if:          0:single link;  1:dual link
;lcd_lvds_colordepth:  0:8bit; 1:6bit
;lcd_lvds_mode:        0:NS mode; 1:JEIDA mode
;lcd_frm:              0:disable; 1:enable rgb666 dither; 2:enable rgb656 dither
;lcd_io_phase:         0:noraml; 1:intert phase(0~3bit: vsync phase; 4~7bit:hsync phase;
;                      8~11bit:dclk phase; 12~15bit:de phase)
;lcd_gamma_en          lcd gamma correction enable
;lcd_bright_curve_en   lcd bright curve correction enable
;lcd_cmap_en           lcd color map function enable
;deu_mode              0:smoll lcd screen; 1:large lcd screen(larger than 10inch)
;lcdgamma4iep:         Smart Backlight parameter, lcd gamma vale * 10;
;                      decrease it while lcd is not bright enough; increase while lcd is too bright
;smart_color           90:normal lcd screen 65:retina lcd screen(9.7inch)
;Pin setting for special function ie.LVDS, RGB data or vsync
;   name(donot care) = port:PD12<pin function><pull up or pull down><drive ability><output level>
;Pin setting for gpio:
;   lcd_gpio_X     = port:PD12<pin function><pull up or pull down><drive ability><output level>
;Pin setting for backlight enable pin
;   lcd_bl_en     = port:PD12<pin function><pull up or pull down><drive ability><output level>
;fsync setting, pulse to csi
;lcd_fsync_en          (0:disable fsync,1:enable)
;lcd_fsync_act_time    (active time of fsync, unit:pixel)
;lcd_fsync_dis_time    (disactive time of fsync, unit:pixel)
;lcd_fsync_pol         (0:positive;1:negative)
;gpio config: <&pio for cpu or &r_pio for cpus, port, port num, pio function,
pull up or pull down(default 0), driver level(default 1), data>
;For dual link lvds: use lvds2link_pins_a  and lvds2link_pins_b instead
;For rgb24: use rgb24_pins_a  and rgb24_pins_b instead
;For lvds1: use lvds1_pins_a  and lvds1_pins_b instead
;For lvds0: use lvds0_pins_a  and lvds0_pins_b instead
;----------------------------------------------------------------------------------*/
&lcd0 {
	lcd_used            = <1>;

	lcd_driver_name     = "ili9806e";
	lcd_backlight       = <100>;
	lcd_if              = <4>;

	lcd_x               = <480>;
	lcd_y               = <800>;
	lcd_width           = <52>;
	lcd_height          = <52>;
	lcd_dclk_freq       = <25>;

	lcd_pwm_used        = <1>;
	lcd_pwm_ch          = <2>;
	lcd_pwm_freq        = <1000>;
	lcd_pwm_pol         = <0>;
	lcd_pwm_max_limit   = <255>;

	lcd_hbp             = <10>;
	lcd_ht              = <515>;
	lcd_hspw            = <5>;
	lcd_vbp             = <20>;
	lcd_vt              = <830>;
	lcd_vspw            = <5>;

	lcd_dsi_if          = <0>;
	lcd_dsi_lane        = <2>;
	lcd_lvds_if         = <0>;
	lcd_lvds_colordepth = <0>;
	lcd_lvds_mode       = <0>;
	lcd_frm             = <0>;
	lcd_hv_clk_phase    = <0>;
	lcd_hv_sync_polarity= <0>;
	lcd_io_phase        = <0x0000>;
	lcd_gamma_en        = <0>;
	lcd_bright_curve_en = <0>;
	lcd_cmap_en         = <0>;
	lcd_fsync_en        = <0>;
	lcd_fsync_act_time  = <1000>;
	lcd_fsync_dis_time  = <1000>;
	lcd_fsync_pol       = <0>;

	deu_mode            = <0>;
	lcdgamma4iep        = <22>;
	smart_color         = <90>;

	lcd_gpio_0 =  <&pio PD 21 GPIO_ACTIVE_HIGH>;
	pinctrl-0 = <&dsi4lane_pins_a>;
	pinctrl-1 = <&dsi4lane_pins_b>;
};
/*
&lcd0 {
	lcd_used            = <1>;

	lcd_driver_name     = "he0801a068";
	lcd_backlight       = <50>;
	lcd_if              = <4>;

	lcd_x               = <800>;
	lcd_y               = <1280>;
	lcd_width           = <800>;
	lcd_height          = <1280>;
	lcd_dclk_freq       = <78>;

	lcd_pwm_used        = <1>;
	lcd_pwm_ch          = <7>;
	lcd_pwm_freq        = <50000>;
	lcd_pwm_pol         = <1>;
	lcd_pwm_max_limit   = <255>;

	lcd_hbp             = <149>;
	lcd_ht              = <978>;
	lcd_hspw            = <16>;
	lcd_vbp             = <7>;
	lcd_vt              = <1329>;
	lcd_vspw            = <5>;

	lcd_dsi_lane        = <4>;
	lcd_dsi_if          = <0>;
	lcd_dsi_format      = <0>;
	lcd_dsi_te          = <0>;
	lcd_frm             = <0>;
	lcd_io_phase        = <0>;
	lcd_gamma_en        = <0>;
	lcd_bright_curve_en = <0>;
	lcd_cmap_en         = <0>;

	deu_mode            = <0>;
	lcdgamma4iep        = <22>;
	smart_color         = <90>;

	lcd_gpio_0 = <&pio PG 13 GPIO_ACTIVE_HIGH>;
	pinctrl-0 = <&dsi4lane_pins_a>;
	pinctrl-1 = <&dsi4lane_pins_b>;
};*/
/*
&lcd0 {
	lcd_used            = <1>;

	lcd_driver_name     = "default_lcd";
	lcd_backlight       = <50>;
	lcd_if              = <0>;

	lcd_x               = <800>;
	lcd_y               = <480>;
	lcd_width           = <150>;
	lcd_height          = <94>;
	lcd_dclk_freq       = <52>;

	lcd_pwm_used        = <1>;
	lcd_pwm_ch          = <3>;
	lcd_pwm_freq        = <50000>;
	lcd_pwm_pol         = <1>;

	lcd_hbp             = <160>;
	lcd_ht              = <1344>;
	lcd_hspw            = <60>;
	lcd_vbp             = <23>;
	lcd_vt              = <638>;
	lcd_vspw            = <10>;

	lcd_lvds_if         = <0>;
	lcd_lvds_colordepth = <1>;
	lcd_lvds_mode       = <0>;
	lcd_frm             = <0>;
	lcd_io_phase        = <0x0000>;
	lcd_gamma_en        = <0>;
	lcd_bright_curve_en = <0>;
	lcd_cmap_en         = <0>;

	deu_mode            = <0>;
	lcdgamma4iep        = <22>;
	smart_color         = <90>;

	lcd_bl_en = <&pio PB 1 1 0xffffffff 0xffffffff 0x1>;
	pinctrl-0 = <&rgb18_pins_a>;
	pinctrl-1 = <&rgb18_pins_b>;
};*/

/*
tvd configuration
used                   (create device, 0: do not create device, 1: create device)
agc_auto_enable        (0: agc manual mode,agc_manual_value is valid; 1: agc auto mode)
agc_manual_value       (agc manual value, default value is 64)
cagc_enable            (cagc        0: disable, 1: enable)
fliter_used            (3d fliter   0: disable, 1: enable)
support two PMU power  (tvd_power0, tvd_power1)
support two GPIO power (tvd_gpio0, tvd_gpio1)
NOTICE: If tvd need pmu power or gpio power,params need be configured under [tvd]
tvd_sw                 (the switch of all tvd driver.)
tvd_interface          (0: cvbs, 1: ypbpr,)
tvd_format             (0:TVD_PL_YUV420 , 1: MB_YUV420, 2: TVD_PL_YUV422)
tvd_system             (0:ntsc, 1:pal)
tvd_row                (total row number in multi channel mode 1-2)
tvd_column             (total column number in multi channel mode 1-2)
tvd_channelx_en        (0:disable, 1~4:position in multi channel mode,In single channel
                       mode,mean enable)
tvd_row*tvd_column is the total tvd channel number to be used in multichannel mode
+--------------------+--------------------+
|                    |                    |
|                    |                    |
|         1          |         2          |
|                    |                    |
|                    |                    |
+--------------------+--------------------+
|                    |                    |
|                    |                    |
|         3          |         4          |
|                    |                    |
|                    |                    |
+--------------------+--------------------+
*/

&tvd {
	tvd_sw          = <1>;
	tvd_interface   = <0>;
	tvd_format      = <0>;
	tvd_system      = <1>;
	tvd_row         = <1>;
	tvd_column      = <1>;
	tvd_channel0_en = <1>;
	tvd_channel1_en = <0>;
	tvd_channel2_en = <0>;
	tvd_channel3_en = <0>;
	/*tvd_gpio0 = <&pio PD 22 GPIO_ACTIVE_HIGH>;*/
	/*tvd_gpio1 = <&pio PD 23 GPIO_ACTIVE_HIGH>;*/
	/*tvd_gpio2 = <&pio PD 24 GPIO_ACTIVE_HIGH>;*/
	/*	dc1sw-supply = <&reg_dc1sw>;*/
	/*	eldo3-supply = <&reg_eldo3>;*/
	/*tvd_power0      = "dc1sw"*/
	/*tvd_power1      = "eldo3"*/
};

&tvd0 {
	used                    = <1>;
	agc_auto_enable         = <1>;
	agc_manual_value        = <64>;
	cagc_enable             = <1>;
	fliter_used             = <1>;
};

/* Audio Driver modules */
&codec {
	/* MIC and headphone gain setting */
	mic1gain 		= <0x1F>;
	mic2gain 		= <0x1F>;
	mic3gain 		= <0x1F>;
	/* ADC/DAC DRC/HPF func enabled */
	/* 0x1:DAP_HP_EN; 0x2:DAP_SPK_EN; 0x3:DAP_HPSPK_EN */
	adcdrc_cfg		= <0x0>;
	adchpf_cfg		= <0x1>;
	dacdrc_cfg		= <0x0>;
	dachpf_cfg		= <0x0>;
	/* Volume about */
	digital_vol 	= <0x00>;
	lineout_vol 	= <0x1a>;
	headphonegain	= <0x03>;
	/* Pa enabled about */
	pa_level 		= <0x01>;
	pa_pwr_level 	= <0x01>;
	pa_msleep_time 	= <0x78>;
	/* gpio-spk	= <&pio PE 11 GPIO_ACTIVE_LOW>; */
	/* CMA config about */
	playback_cma	= <128>;
	capture_cma	= <256>;
	/* regulator about */
	/* avcc-supply	= <&reg_aldo1>; */
	/* hpvcc-supply	= <&reg_eldo1>; */
	status = "okay";
};
&codec_plat {
	status = "okay";
};
&codec_mach {
	status = "okay";
	soundcard-mach,cpu {
		sound-dai = <&codec_plat>;
	};
        soundcard-mach,codec {
		sound-dai = <&codec>;
        };
	
};

&sndcodec {
	//hp_detect_case	= <0x00>;
	hp_detect_case        = <0x01>;
	jack_enable		= <0x01>;
	status = "okay";
};

&dummy_cpudai {
	playback_cma	= <128>;
	capture_cma		= <256>;
	status			= "okay";
};
&dmic {
	pinctrl-names   = "default","sleep";
	pinctrl-0       = <&dmic_pins_a>;
	pinctrl-1       = <&dmic_pins_b>;
	status = "disabled";
};

&dmic_codec {
	status = "okay";
};

&sounddmic {
	status = "okay";
};


/*-----------------------------------------------------------------------------
 * pcm_lrck_period	16/32/64/128/256
 * slot_width_select	16bits/20bits/24bits/32bits
 * frametype		0 --> short frame = 1 clock width;
 *			1 --> long frame = 2 clock width;
 * tdm_config		0 --> pcm
 *			1 --> i2s
 * mclk_div		0 --> not output
 *			1/2/4/6/8/12/16/24/32/48/64/96/128/176/192
 *			(set mclk as external codec clk source, freq is pll_audio/mclk_div)
 *			1 --> I2S/PCM use for external audio
 * daudio_type:		0 --> external audio type
 *---------------------------------------------------------------------------*/
&daudio0 {
	mclk_div 	= <0x01>;
	frametype 	= <0x00>;
	tdm_config 	= <0x01>;
	sign_extend 	= <0x00>;
	msb_lsb_first 	= <0x00>;
	pcm_lrck_period = <0x80>;
	slot_width_select = <0x20>;
	pinctrl-names   = "default", "sleep";
	pinctrl-0       = <&daudio0_pins_a>;
	pinctrl-1       = <&daudio0_pins_b>;
	pinctrl_used	= <0x0>;
	status = "disabled";
};

&sounddaudio0 {
	status = "disabled";
	daudio0_master: simple-audio-card,codec {
		/* sound-dai = <&ac108>; */
	};
};

/*-----------------------------------------------------------------------------
 * simple-audio-card,name	name of sound card, e.g.
 *				"snddaudio0" --> use for external audio
 * sound-dai			"snd-soc-dummy" --> use for I2S
 *				"ac108" --> use for external audio of ac108
 *---------------------------------------------------------------------------*/
&daudio1 {
	mclk_div 	= <0x01>;
	frametype 	= <0x00>;
	tdm_config 	= <0x01>;
	sign_extend 	= <0x00>;
	msb_lsb_first 	= <0x00>;
	pcm_lrck_period = <0x80>;
	slot_width_select = <0x20>;
	pinctrl-names   = "default", "sleep";
	pinctrl-0       = <&daudio1_pins_a &daudio1_pins_b &daudio1_pins_c>;
	pinctrl-1       = <&daudio1_pins_d>;
	pinctrl_used	= <0x1>;
	status = "disabled";
};

&sounddaudio1 {
	status = "disabled";
	daudio1_master: simple-audio-card,codec {
		/* sound-dai = <&ac108>; */
	};
};

&daudio2 {
	mclk_div 	= <0x01>;
	frametype 	= <0x00>;
	tdm_config 	= <0x01>;
	sign_extend 	= <0x00>;
	msb_lsb_first 	= <0x00>;
	pcm_lrck_period = <0x80>;
	slot_width_select = <0x20>;
	pinctrl-names   = "default", "sleep";
	pinctrl-0       = <&daudio2_pins_a &daudio2_pins_b &daudio2_pins_c>;
	pinctrl-1       = <&daudio2_pins_d>;
	pinctrl_used	= <0x1>;
	status = "disabled";
};

&sounddaudio2 {
	status = "disabled";
	daudio2_master: simple-audio-card,codec {
		/* sound-dai = <&ac108>; */
	};
};

&spdif {
	status = "okay";
};

&soundspdif {
	status = "okay";
};

/*
 *usb_port_type: usb mode. 0-device, 1-host, 2-otg.
 *usb_detect_type: usb hotplug detect mode. 0-none, 1-vbus/id detect, 2-id/dpdm detect.
 *usb_detect_mode: 0-thread scan, 1-id gpio interrupt.
 *usb_id_gpio: gpio for id detect.
 *usb_det_vbus_gpio: gpio for id detect. gpio or "axp_ctrl";
 *usb_wakeup_suspend：0-SUPER_STANDBY, 1-USB_STANDBY.
 */
&usbc0 {
	device_type = "usbc0";
	usb_port_type = <0x2>;
	usb_detect_type = <0x1>;
	usb_detect_mode = <0x0>;
	usb_id_gpio = <&pio PB 11 GPIO_ACTIVE_HIGH>;
	enable-active-high;
	usb_det_vbus_gpio = <&pio PB 10 GPIO_ACTIVE_HIGH>;
	usb_wakeup_suspend = <0>;
	usb_serial_unique = <0>;
	usb_serial_number = "20080411";
	rndis_wceis = <1>;
	status = "okay";
};

&ehci0 {
	drvvbus-supply = <&reg_usb1_vbus>;
};

&ohci0 {
	drvvbus-supply = <&reg_usb1_vbus>;
};

&usbc1 {
	device_type = "usbc1";
	usb_regulator_io = "nocare";
	usb_wakeup_suspend = <0>;
	status = "okay";
};

&ehci1 {
	drvvbus-supply = <&reg_usb1_vbus>;
	status = "okay";
};

&ohci1 {
	drvvbus-supply = <&reg_usb1_vbus>;
	status = "okay";
};


&pwm2 {
        pinctrl-names = "active", "sleep";
        pinctrl-0 = <&pwm2_pin_a>;
        pinctrl-1 = <&pwm2_pin_b>;
        status = "okay";
};

&pwm3 {
	pinctrl-names = "active", "sleep";
	pinctrl-0 = <&pwm3_pin_a>;
	pinctrl-1 = <&pwm3_pin_b>;
	status = "okay";
};

&pwm7 {
	pinctrl-names = "active", "sleep";
	pinctrl-0 = <&pwm7_pin_a>;
	pinctrl-1 = <&pwm7_pin_b>;
	status = "okay";
};

&gpadc {
	channel_num = <1>;
	channel_select = <0x1>;
	channel_data_select = <0>;
	channel_compare_select = <0x1>;
	channel_cld_select = <0x1>;
	channel_chd_select = <0>;
	channel0_compare_lowdata = <1700000>;
	channel0_compare_higdata = <1200000>;
	channel1_compare_lowdata = <460000>;
	channel1_compare_higdata = <1200000>;
	key_cnt = <5>;
	key0_vol = <210>;
	key0_val = <115>;
	key1_vol = <410>;
	key1_val = <114>;
	key2_vol = <590>;
	key2_val = <119>;
	key3_vol = <750>;
	key3_val = <373>;
	key4_vol = <880>;
	key4_val = <28>;
	status = "okay";
};

&rtp {
	allwinner,tp-sensitive-adjust = <0xf>;
	allwinner,filter-type = <0x1>;
	allwinner,ts-attached;
	status = "okay";
};

&cpu_thermal_zone {
	cpu_trips: trips {
		cpu_crit: cpu_crit@0 {
			temperature = <115000>;
			type = "critical";
			hysteresis = <0>;
		};
	};
};


